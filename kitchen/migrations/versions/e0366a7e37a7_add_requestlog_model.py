"""Add RequestLog model

Revision ID: e0366a7e37a7
Revises: 
Create Date: 2025-03-05 14:24:17.498882

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e0366a7e37a7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_queries_id', table_name='queries')
    op.drop_index('ix_queries_query_id', table_name='queries')
    op.drop_index('ix_queries_session_id', table_name='queries')
    op.drop_index('ix_queries_user_id', table_name='queries')
    op.drop_table('queries')
    op.drop_index('ix_query_responses_id', table_name='query_responses')
    op.drop_index('ix_query_responses_query_id', table_name='query_responses')
    op.drop_index('ix_query_responses_response_id', table_name='query_responses')
    op.drop_table('query_responses')
    op.drop_index('ix_query_sessions_id', table_name='query_sessions')
    op.drop_index('ix_query_sessions_session_id', table_name='query_sessions')
    op.drop_index('ix_query_sessions_user_id', table_name='query_sessions')
    op.drop_table('query_sessions')
    op.drop_index('ix_request_logs_request_id', table_name='request_logs')
    op.drop_index('ix_request_logs_timestamp', table_name='request_logs')
    op.drop_index('ix_request_logs_user_id', table_name='request_logs')
    op.drop_table('request_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('request_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('request_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('duration_ms', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('request_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('response_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('exception', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='request_logs_pkey')
    )
    op.create_index('ix_request_logs_user_id', 'request_logs', ['user_id'], unique=False)
    op.create_index('ix_request_logs_timestamp', 'request_logs', ['timestamp'], unique=False)
    op.create_index('ix_request_logs_request_id', 'request_logs', ['request_id'], unique=False)
    op.create_table('query_sessions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('query_sessions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='query_sessions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_query_sessions_user_id', 'query_sessions', ['user_id'], unique=False)
    op.create_index('ix_query_sessions_session_id', 'query_sessions', ['session_id'], unique=True)
    op.create_index('ix_query_sessions_id', 'query_sessions', ['id'], unique=False)
    op.create_table('query_responses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('response_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('query_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('usage', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('execution_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['query_id'], ['queries.query_id'], name='query_responses_query_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='query_responses_pkey')
    )
    op.create_index('ix_query_responses_response_id', 'query_responses', ['response_id'], unique=True)
    op.create_index('ix_query_responses_query_id', 'query_responses', ['query_id'], unique=False)
    op.create_index('ix_query_responses_id', 'query_responses', ['id'], unique=False)
    op.create_table('queries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('query_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prompt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('temperature', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['query_sessions.session_id'], name='queries_session_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='queries_pkey')
    )
    op.create_index('ix_queries_user_id', 'queries', ['user_id'], unique=False)
    op.create_index('ix_queries_session_id', 'queries', ['session_id'], unique=False)
    op.create_index('ix_queries_query_id', 'queries', ['query_id'], unique=True)
    op.create_index('ix_queries_id', 'queries', ['id'], unique=False)
    # ### end Alembic commands ### 